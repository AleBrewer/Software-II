package sample;


import javafx.event.ActionEvent;
import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.scene.Node;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.scene.control.ComboBox;
import javafx.scene.control.TextField;
import javafx.stage.Stage;
import java.io.IOException;
import java.sql.*;
import java.time.LocalDateTime;


public class CustomerAddModifyController {

    @FXML private ComboBox<String> firstLevelDivisionComboBox;
    @FXML private ComboBox<String> countryComboBox;
    @FXML private TextField idTextField;
    @FXML private TextField nameTextField;
    @FXML private TextField addressTextField;
    @FXML private TextField postalCodeTextField;
    @FXML private TextField phoneNumberTextField;

    Connection conn;
    Integer userID;
    Integer autoGeneratedID;
    Customer selectedCustomer;

    public void addCustomerButton(ActionEvent event) throws IOException {



        try {
            String sqlStatement = "SELECT * FROM users WHERE user_ID = '" + userID + "'";
            Statement stmt = conn.createStatement();
            ResultSet result = stmt.executeQuery(sqlStatement);

            result.next();

            String divisionString = firstLevelDivisionComboBox.getValue();

            String sqlDivision = "SELECT * FROM first_level_divisions WHERE Division = '" + divisionString + "'";
            Statement divisionstmt = conn.createStatement();
            ResultSet divisionResult = divisionstmt.executeQuery(sqlDivision);

            divisionResult.next();

            String customerID = autoGeneratedID.toString();
            String customerName = nameTextField.getText();
            String address = addressTextField.getText();
            String postalCode = postalCodeTextField.getText();
            String phone = phoneNumberTextField.getText();
            String createDate = LocalDateTime.now().toString();
            String createBy = result.getString("User_Name");
            String lastUpdate = LocalDateTime.now().toString();
            String lastUpdateBy = result.getString("User_Name");
            String divisionID = divisionResult.getString("Division_ID");

            if (idTextField.getText().equals("")) {
                Statement newCustomer = conn.createStatement();
                String sqlNewCustomer = "INSERT INTO customers" +
                        "(Customer_ID, Customer_Name, Address, Postal_Code, Phone, Create_Date, Created_By, Last_Update, Last_Updated_By, Division_ID)" +
                        "VALUES ('"
                        + customerID + "','"
                        + customerName + "','"
                        + address + "','"
                        + postalCode + "','"
                        + phone + "','"
                        + createDate + "','"
                        + createBy + "','"
                        + lastUpdate + "','"
                        + lastUpdateBy + "','"
                        + divisionID + "')";

                newCustomer.executeUpdate(sqlNewCustomer);
            }
            else {
                Statement newCustomer = conn.createStatement();
                String sqlNewCustomer = "UPDATE customers" +
                        " SET Customer_Name = '" +customerName + "'," +
                        " Address = '" + address + "'," +
                        " Postal_Code = '" + postalCode + "'," +
                        " Phone = '" + phone + "'," +
                        " Last_Update = '" + lastUpdate + "'," +
                        " Last_Updated_By = '" + lastUpdateBy + "'," +
                        " Division_ID = '" + divisionID + "'" +
                        " WHERE Customer_ID = '" + idTextField.getText() + "'";
                newCustomer.executeUpdate(sqlNewCustomer);
            }
        } catch (Exception ex) {
            System.out.println("Error: " + ex.getMessage());
        }

        FXMLLoader loader = new FXMLLoader();
        loader.setLocation(getClass().getResource("MainUI.fxml"));
        Parent tableViewParent = loader.load();

        Scene tableViewScene = new Scene(tableViewParent);
        MainUIController mainUIController = loader.getController();
        mainUIController.setDatabaseConnection(conn, userID);

        Stage window = (Stage) ((Node) event.getSource()).getScene().getWindow();
        window.setScene(tableViewScene);
        window.show();

    }

    public void backButton(ActionEvent event) throws IOException {
        FXMLLoader loader = new FXMLLoader();
        loader.setLocation(getClass().getResource("MainUI.fxml"));
        Parent tableViewParent = loader.load();

        Scene tableViewScene = new Scene(tableViewParent);
        MainUIController mainUIController = loader.getController();
        mainUIController.setDatabaseConnection(conn, userID);

        Stage window = (Stage)((Node)event.getSource()).getScene().getWindow();
        window.setScene(tableViewScene);
        window.show();
    }

    public void setCountryComboBox()
    {
        try {
            String sqlStatement = "SELECT * FROM countries";
            Statement stmt = conn.createStatement();
            ResultSet result = stmt.executeQuery(sqlStatement);

            result.next();

            do { countryComboBox.getItems().add(result.getString("Country")); }
            while(result.next());
        }
        catch (Exception ex){System.out.println("Error: " + ex.getMessage()); }
    }

    public void setFirstLevelDivisionComboBox()
    {
        try {
            String sqlStatement = "SELECT * FROM first_level_divisions";
            Statement stmt = conn.createStatement();
            ResultSet result = stmt.executeQuery(sqlStatement);

            result.next();

            do { firstLevelDivisionComboBox.getItems().add(result.getString("Division")); }
            while(result.next());
        }
        catch (Exception ex){System.out.println("Error: " + ex.getMessage()); }
    }


    public void filterFirstLevelDivisions() throws SQLException {

        firstLevelDivisionComboBox.getItems().clear();

        if (countryComboBox.getValue().equals("U.S"))
        {
            String sqlStatement = "SELECT * FROM first_level_divisions WHERE COUNTRY_ID = '1' ";
            Statement stmt = conn.createStatement();
            ResultSet result = stmt.executeQuery(sqlStatement);

            result.next();
            do{ firstLevelDivisionComboBox.getItems().add(result.getString("Division")); }
            while (result.next());
        }

        if (countryComboBox.getValue().equals("UK"))
        {
            String sqlStatement = "SELECT * FROM first_level_divisions WHERE COUNTRY_ID = '2' ";
            Statement stmt = conn.createStatement();
            ResultSet result = stmt.executeQuery(sqlStatement);

            result.next();
            do{ firstLevelDivisionComboBox.getItems().add(result.getString("Division")); }
            while (result.next());
        }

        if (countryComboBox.getValue().equals("Canada"))
        {
            String sqlStatement = "SELECT * FROM first_level_divisions WHERE COUNTRY_ID = '3' ";
            Statement stmt = conn.createStatement();
            ResultSet result = stmt.executeQuery(sqlStatement);

            result.next();
            do{ firstLevelDivisionComboBox.getItems().add(result.getString("Division")); }
            while (result.next());
        }

    }

    private void setAutoGeneratedID(){
        try {
            int newID = 0;
            String sqlStatement = "SELECT * FROM customers";
            Statement stmt = conn.createStatement();
            ResultSet result = stmt.executeQuery(sqlStatement);

            while (result.next())
            {
                if (newID < Integer.parseInt(result.getString("Customer_ID")))
                {
                    newID = Integer.parseInt(result.getString("Customer_ID"));
                }
            }
            autoGeneratedID = newID + 1;
        }
        catch (Exception ex){System.out.println(ex.getMessage());}
    }


    public void setDatabaseConnectionAdd(Connection mainUI, Integer user){
        conn = mainUI;
        userID = user;
        setCountryComboBox();
        setFirstLevelDivisionComboBox();
        setAutoGeneratedID();
    }

    public void setDatabaseConnectionModify(Connection mainUI, Integer user, Customer selected){
        conn = mainUI;
        userID = user;
        selectedCustomer = selected;
        setCountryComboBox();
        setFirstLevelDivisionComboBox();
        setAutoGeneratedID();
        setTextFields();
    }

    private void setTextFields()
    {
        try {
            String firstLevelSql = "SELECT * FROM first_level_divisions WHERE Division = '" + selectedCustomer.getDivision() +"'";
            Statement firstLevelStmt = conn.createStatement();
            ResultSet firstLevelResult = firstLevelStmt.executeQuery(firstLevelSql);
            firstLevelResult.next();

            String countryID = firstLevelResult.getString("COUNTRY_ID");
            String countrySql = "SELECT * FROM countries WHERE Country_ID = '" + countryID + "'";
            Statement countryStmt = conn.createStatement();
            ResultSet countryResult = countryStmt.executeQuery(countrySql);
            countryResult.next();

            idTextField.setText(Integer.toString(selectedCustomer.getId()));
            nameTextField.setText(selectedCustomer.getName());
            addressTextField.setText(selectedCustomer.getAddress());
            postalCodeTextField.setText(selectedCustomer.getPostalCode());
            phoneNumberTextField.setText(selectedCustomer.getPhone());
            firstLevelDivisionComboBox.setValue(firstLevelResult.getString("Division"));
            countryComboBox.setValue(countryResult.getString("Country"));

        }
        catch(Exception ex){System.out.println(ex.getMessage());}


    }


    public void initialize()
    {

    }

}
