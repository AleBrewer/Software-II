package sample;

import javafx.event.ActionEvent;
import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.scene.Node;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.scene.control.ComboBox;
import javafx.scene.control.DatePicker;
import javafx.scene.control.TextField;
import javafx.stage.Stage;
import java.io.IOException;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import java.time.LocalDateTime;
import java.time.LocalTime;

public class AppointmentsAddModifyController
{
    private Connection conn;
    private Integer userID;
    private Integer autoGeneratedID;

    @FXML TextField appointmentIDTextField;
    @FXML TextField titleTextField;
    @FXML TextField descriptionTextField;
    @FXML TextField locationTextField;
    @FXML ComboBox <String> contactComboBox;
    @FXML TextField typeTextField;
    @FXML DatePicker startDatePicker;
    @FXML ComboBox <LocalTime> startTimeComboBox;
    @FXML DatePicker endDatePicker;
    @FXML ComboBox <LocalTime> endTimeComboBox;
    @FXML TextField customerIDTextField;

    public void backToAppointments(ActionEvent event) throws IOException
    {
        FXMLLoader loader = new FXMLLoader();
        loader.setLocation(getClass().getResource("AppointmentsUI.fxml"));
        Parent tableViewParent = loader.load();

        Scene tableViewScene = new Scene(tableViewParent);

        AppointmentsUIController appointmentsUIController = loader.getController();
        appointmentsUIController.setDatabaseConnection(conn, userID);

        Stage window = (Stage)((Node)event.getSource()).getScene().getWindow();
        window.setScene(tableViewScene);
        window.show();
    }

    public void addAppointments(ActionEvent event) throws IOException
    {
        try{

            String userSql = "SELECT * FROM users WHERE user_ID = '" + userID + "'";
            Statement userStmt = conn.createStatement();
            ResultSet userResult = userStmt.executeQuery(userSql);
            userResult.next();

            String contactSql = "SELECT * FROM contacts WHERE Contact_Name = '" + contactComboBox.getValue() + "'";
            Statement contactStmt = conn.createStatement();
            ResultSet contactResult = contactStmt.executeQuery(contactSql);
            contactResult.next();


            String appointmentID = autoGeneratedID.toString();
            String title = titleTextField.getText();
            String description = descriptionTextField.getText();
            String location = locationTextField.getText();
            String type = typeTextField.getText();
            String start = LocalDateTime.of(startDatePicker.getValue(), startTimeComboBox.getValue()).toString();
            String end = LocalDateTime.of(endDatePicker.getValue(), endTimeComboBox.getValue()).toString();
            String createDate = LocalDateTime.now().toString();
            String createdBy = userResult.getString("User_Name");
            String lastUpdate = LocalDateTime.now().toString();
            String lastUpdatedBy = userResult.getString("User_Name");
            String customer_ID = customerIDTextField.getText();
            String user_ID = userResult.getString("User_ID");
            String contact_ID = contactResult.getString("Contact_ID");



            Statement newAppointment = conn.createStatement();
            String sqlNewAppointment = "INSERT INTO appointments " +
                    "(Appointment_ID, Title, Description, Location, Type, Start, End, Create_Date, Created_By, Last_Update, Last_Updated_By, Customer_ID, User_ID, Contact_ID) " +
                    "VALUES ('"
                    + appointmentID + "','"
                    + title + "','"
                    + description + "','"
                    + location + "','"
                    + type + "','"
                    + start + "','"
                    + end + "','"
                    + createDate + "','"
                    + createdBy + "','"
                    + lastUpdate + "','"
                    + lastUpdatedBy + "','"
                    + customer_ID + "','"
                    + user_ID + "','"
                    + contact_ID + "')";

            System.out.println(sqlNewAppointment);
            newAppointment.executeUpdate(sqlNewAppointment);
        }

        catch (Exception ex){System.out.println(ex.getMessage());}

        FXMLLoader loader = new FXMLLoader();
        loader.setLocation(getClass().getResource("AppointmentsUI.fxml"));
        Parent tableViewParent = loader.load();

        Scene tableViewScene = new Scene(tableViewParent);

        AppointmentsUIController appointmentsUIController = loader.getController();
        appointmentsUIController.setDatabaseConnection(conn, userID);

        Stage window = (Stage)((Node)event.getSource()).getScene().getWindow();
        window.setScene(tableViewScene);
        window.show();

    }

    private void setContactComboBox()
    {
        try {
            String sqlStatement = "SELECT * FROM contacts";
            Statement stmt = conn.createStatement();
            ResultSet result = stmt.executeQuery(sqlStatement);

            while (result.next())
            {
                contactComboBox.getItems().add(result.getString("Contact_Name"));
            }
        }
        catch (Exception ex){System.out.println(ex.getMessage());}
    }



    private void setAutoGeneratedID(){
        try {
            int newID = 0;
            String sqlStatement = "SELECT * FROM appointments";
            Statement stmt = conn.createStatement();
            ResultSet result = stmt.executeQuery(sqlStatement);

            while (result.next())
            {
                if (newID < Integer.parseInt(result.getString("Customer_ID")))
                {
                    newID = Integer.parseInt(result.getString("Customer_ID"));
                }
            }
            autoGeneratedID = newID + 1;
        }
        catch (Exception ex){System.out.println(ex.getMessage());}
    }


    public void setDatabaseConnection(Connection appointmentConn, Integer user)
    {
        conn = appointmentConn;
        userID = user;
        setAutoGeneratedID();
        setContactComboBox();

    }

    public void initialize()
    {

        LocalTime start = LocalTime.of(8,0);
        LocalTime end = LocalTime.of(22,0);

        while (start.isBefore(end.plusSeconds(1))){
            startTimeComboBox.getItems().add(start);
            endTimeComboBox.getItems().add(start);
            start = start.plusMinutes(30);
        }
        
    }


}
